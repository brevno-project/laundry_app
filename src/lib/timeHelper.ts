// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –≤—Ä–µ–º–µ–Ω–∏
export const LAUNDRY_OPEN_HOUR = 9;   // 09:00
export const LAUNDRY_CLOSE_HOUR = 22; // 22:00
export const WARNING_HOUR = 21;       // 21:00 - –Ω–∞—á–∞–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π

export interface TimeStatus {
  isOpen: boolean;              // –ú–æ–∂–Ω–æ –ª–∏ –Ω–∞—á–∞—Ç—å —Å—Ç–∏—Ä–∫—É
  isWarningTime: boolean;       // –í—Ä–µ–º—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π (21:00-22:00)
  isClosed: boolean;            // –ó–∞–∫—Ä—ã—Ç–æ (22:00-09:00)
  minutesUntilClose: number;    // –ú–∏–Ω—É—Ç –¥–æ –∑–∞–∫—Ä—ã—Ç–∏—è
  message: string;              // –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  warningLevel: 'none' | 'warning' | 'danger'; // –£—Ä–æ–≤–µ–Ω—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
}

export function getLaundryTimeStatus(): TimeStatus {
  const now = new Date();
  const hour = now.getHours();
  const minute = now.getMinutes();
  
  // –ó–∞–∫—Ä—ã—Ç–æ: —Å 22:00 –¥–æ 09:00
  const isClosed = hour >= LAUNDRY_CLOSE_HOUR || hour < LAUNDRY_OPEN_HOUR;
  
  // –í—Ä–µ–º—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: —Å 21:00 –¥–æ 22:00
  const isWarningTime = hour >= WARNING_HOUR && hour < LAUNDRY_CLOSE_HOUR;
  
  // –ú–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å —Å—Ç–∏—Ä–∫—É: —Å 09:00 –¥–æ 22:00
  const isOpen = !isClosed;
  
  // –°—á–∏—Ç–∞–µ–º –º–∏–Ω—É—Ç—ã –¥–æ –∑–∞–∫—Ä—ã—Ç–∏—è
  let minutesUntilClose = 0;
  if (isOpen) {
    const closeTime = new Date();
    closeTime.setHours(LAUNDRY_CLOSE_HOUR, 0, 0, 0);
    minutesUntilClose = Math.floor((closeTime.getTime() - now.getTime()) / 60000);
  }
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  let message = '';
  let warningLevel: 'none' | 'warning' | 'danger' = 'none';
  
  if (isClosed) {
    message = `üö´ –°—Ç–∏—Ä–∞–ª—å–Ω–∞—è –∑–∞–∫—Ä—ã—Ç–∞ —Å ${LAUNDRY_CLOSE_HOUR}:00 –¥–æ ${LAUNDRY_OPEN_HOUR}:00`;
    warningLevel = 'danger';
  } else if (isWarningTime) {
    const hours = Math.floor(minutesUntilClose / 60);
    const mins = minutesUntilClose % 60;
    message = `‚ö†Ô∏è –î–æ –∑–∞–∫—Ä—ã—Ç–∏—è: ${hours > 0 ? `${hours}—á ` : ''}${mins}–º–∏–Ω. –£—Å–ø–µ–π—Ç–µ –∑–∞–±—Ä–∞—Ç—å –≤–µ—â–∏ –¥–æ ${LAUNDRY_CLOSE_HOUR}:00!`;
    warningLevel = minutesUntilClose < 30 ? 'danger' : 'warning';
  }
  
  return {
    isOpen,
    isWarningTime,
    isClosed,
    minutesUntilClose,
    message,
    warningLevel
  };
}

export function formatTimeRemaining(minutes: number): string {
  const hours = Math.floor(minutes / 60);
  const mins = minutes % 60;
  
  if (hours > 0) {
    return `${hours}—á ${mins}–º–∏–Ω`;
  }
  return `${mins}–º–∏–Ω`;
}
