// Telegram Bot API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

const TELEGRAM_BOT_TOKEN = process.env.NEXT_PUBLIC_TELEGRAM_BOT_TOKEN || '';
const TELEGRAM_CHAT_ID = process.env.NEXT_PUBLIC_TELEGRAM_CHAT_ID || '';

export interface TelegramNotification {
  type: 'joined' | 'left' | 'washing_started' | 'washing_done';
  userName: string;
  userRoom?: string;
  washCount?: number;
  paymentType?: string;
  queueLength?: number;
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
function formatMessage(notification: TelegramNotification): string {
  const { type, userName, userRoom, washCount, paymentType, queueLength } = notification;
  
  const roomInfo = userRoom ? ` (${userRoom})` : '';
  
  switch (type) {
    case 'joined':
      return `üß∫ *–ù–æ–≤—ã–π –≤ –æ—á–µ—Ä–µ–¥–∏!*\n\nüë§ ${userName}${roomInfo}\nüî¢ –°—Ç–∏—Ä–æ–∫: ${washCount || 1}\nüí∞ –û–ø–ª–∞—Ç–∞: ${paymentType === 'coupon' ? 'üé´ –ö—É–ø–æ–Ω' : 'üíµ –î–µ–Ω—å–≥–∏'}\n\nüìä –í—Å–µ–≥–æ –≤ –æ—á–µ—Ä–µ–¥–∏: ${queueLength} —á–µ–ª.`;
    
    case 'left':
      return `‚ùå *–ü–æ–∫–∏–Ω—É–ª –æ—á–µ—Ä–µ–¥—å*\n\nüë§ ${userName}${roomInfo}\n\nüìä –û—Å—Ç–∞–ª–æ—Å—å: ${queueLength} —á–µ–ª.`;
    
    case 'washing_started':
      return `üü¢ *–°—Ç–∏—Ä–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å!*\n\nüë§ ${userName}${roomInfo}\nüî¢ –°—Ç–∏—Ä–æ–∫: ${washCount || 1}\n\n‚è≥ –ù–µ –∑–∞–±—É–¥—å –≤—ã–¥–∞—Ç—å –∫–ª—é—á!`;
    
    case 'washing_done':
      return `‚úÖ *–°—Ç–∏—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!*\n\nüë§ ${userName}${roomInfo}\n\nüîë –ö–ª—é—á –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–æ–∑–≤—Ä–∞—â–µ–Ω!`;
    
    default:
      return `üìã –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—á–µ—Ä–µ–¥–∏`;
  }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
export async function sendTelegramNotification(notification: TelegramNotification): Promise<boolean> {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–∞ –∏ chat ID
  if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
    console.warn('‚ö†Ô∏è Telegram bot not configured. Set NEXT_PUBLIC_TELEGRAM_BOT_TOKEN and NEXT_PUBLIC_TELEGRAM_CHAT_ID');
    return false;
  }

  try {
    const message = formatMessage(notification);
    const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
    
    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: 'Markdown',
      }),
    });

    if (!response.ok) {
      const error = await response.json();
      console.error('‚ùå Telegram API error:', error);
      return false;
    }

    console.log('‚úÖ Telegram notification sent:', notification.type);
    return true;
  } catch (error) {
    console.error('‚ùå Error sending Telegram notification:', error);
    return false;
  }
}

// –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)
export async function sendTestNotification(): Promise<boolean> {
  return sendTelegramNotification({
    type: 'joined',
    userName: '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    userRoom: 'A501',
    washCount: 2,
    paymentType: 'money',
    queueLength: 5,
  });
}
