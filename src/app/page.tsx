"use client";

import React from 'react';
import { useLaundry } from '@/contexts/LaundryContext';
import TimeBanner from '@/components/TimeBanner';
import StudentAuth from '@/components/StudentAuth';
import AdminLogin from '@/components/AdminLogin';
import UserForm from '@/components/UserForm';
import QueueList from '@/components/QueueList';
import AdminPanel from '@/components/AdminPanel';
import TelegramSetup from '@/components/TelegramSetup';
import HistoryList from '@/components/HistoryList';

export default function Home() {
  const { user, isLoading, logoutStudent, isAdmin, machineState, queue, isNewUser, setIsNewUser } = useLaundry();
  const [activeTab, setActiveTab] = React.useState('main');
  const [showTelegramModal, setShowTelegramModal] = React.useState(false);

  // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª–∫—É Telegram
  React.useEffect(() => {
    console.log('üîç Checking telegram setup:', { 
      user: !!user, 
      userName: user?.name,
      isAdmin, 
      telegram_chat_id: user?.telegram_chat_id,
      isNewUser
    });
    
    if (user && !isAdmin && isNewUser && !user.telegram_chat_id) {
      console.log('‚úÖ Showing Telegram modal for new user!');
      setShowTelegramModal(true);
    }
  }, [user, isAdmin, isNewUser]);

  // ‚úÖ –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∫–∏ (–ø–µ—Ä–µ—Ö–æ–¥ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)
  const handleTelegramSetup = () => {
    console.log('üì± Redirecting to settings...');
    setShowTelegramModal(false);
    setActiveTab('settings');
  };

  console.log('üé∞ Machine State:', machineState);
  console.log('üö® showTelegramModal:', showTelegramModal);

  if (isLoading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-xl">Loading...</div>
      </div>
    );
  }

  return (
    <div className="min-h-screen w-full bg-gray-50">
      {/* ‚úÖ –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û - –ü–æ–¥–∫–ª—é—á–∏—Ç–µ Telegram */}
      {showTelegramModal && user && !user.telegram_chat_id && (
        <div className="fixed inset-0 bg-black bg-opacity-70 z-50 flex items-center justify-center p-4">
          <div className="bg-gradient-to-br from-yellow-50 to-orange-50 rounded-2xl shadow-2xl max-w-lg w-full p-8 border-4 border-yellow-400 animate-pulse">
            <div className="text-center mb-6">
              <div className="text-8xl mb-4 animate-bounce">üì±</div>
              <h2 className="text-3xl font-black text-gray-900 mb-3">
                –ü–æ–¥–∫–ª—é—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è!
              </h2>
              <p className="text-lg text-gray-700 font-semibold">
                –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–æ–≥–¥–∞ –≤–∞—Å –ø–æ–∑–æ–≤—É—Ç, –Ω—É–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å Telegram
              </p>
            </div>

            <div className="space-y-4">
              <button
                onClick={handleTelegramSetup}
                className="w-full bg-green-600 text-white font-black py-4 px-6 rounded-xl hover:bg-green-700 transition-all shadow-lg text-xl"
              >
                ‚úÖ –ü–æ–¥–∫–ª—é—á–∏—Ç—å —Å–µ–π—á–∞—Å
              </button>
              
              <button
                onClick={() => {
                  console.log('‚è≠Ô∏è Skipping telegram setup...');
                  setShowTelegramModal(false);
                  setIsNewUser(false);
                  localStorage.setItem('needsTelegramSetup', 'false');
                }}
                className="w-full bg-gray-400 text-white font-bold py-3 px-6 rounded-xl hover:bg-gray-500 transition-all"
              >
                –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å (–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
              </button>
            </div>

            <p className="text-sm text-gray-600 mt-4 text-center">
              üí° –í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –ø–æ–∑–∂–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
            </p>
          </div>
        </div>
      )}

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <header className="bg-gradient-to-r from-blue-600 to-blue-700 p-4 shadow-lg sticky top-0 z-10">
        <h1 className="text-2xl font-bold text-white text-center">üß∫ –û—á–µ—Ä–µ–¥—å –Ω–∞ —Å—Ç–∏—Ä–∫—É</h1>
      </header>

      {/* –¢–∞–±—ã */}
      {user && (
        <nav className="bg-white border-b shadow-sm sticky top-14 z-10">
          <div className="flex">
            <button
              onClick={() => setActiveTab('main')}
              className={`flex-1 py-3 px-4 text-sm font-semibold border-b-2 transition-colors ${
                activeTab === 'main'
                  ? 'border-blue-600 text-blue-600 bg-blue-50'
                  : 'border-transparent text-gray-600 hover:text-gray-900'
              }`}
            >
              üè† –ì–ª–∞–≤–Ω–∞—è
            </button>
              <button
                onClick={() => setActiveTab('history')}
                className={`flex-1 py-3 px-4 text-sm font-semibold border-b-2 transition-colors ${
                  activeTab === 'history'
                    ? 'border-blue-600 text-blue-600 bg-blue-50'
                    : 'border-transparent text-gray-600 hover:text-gray-900'
                }`}
              >
                üìú –ò—Å—Ç–æ—Ä–∏—è
              </button>
            <button
              onClick={() => setActiveTab('settings')}
              className={`flex-1 py-3 px-4 text-sm font-semibold border-b-2 transition-colors ${
                activeTab === 'settings'
                  ? 'border-blue-600 text-blue-600 bg-blue-50'
                  : 'border-transparent text-gray-600 hover:text-gray-900'
              }`}
            >
              ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            </button>
          </div>
        </nav>
      )}

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="w-full p-3">
        {activeTab === 'main' && (
          <div className="space-y-4">
            <TimeBanner />
            
            {/* –°—Ç–∞—Ç—É—Å –º–∞—à–∏–Ω—ã */}
            <div className="bg-white rounded-lg shadow-lg border border-gray-200 p-4">
              <h3 className="text-lg font-bold mb-3 text-gray-800">–°—Ç–∞—Ç—É—Å –º–∞—à–∏–Ω—ã</h3>
              {machineState.status === 'idle' ? (
                <div className="bg-green-50 border-2 border-green-500 rounded-lg p-3 text-center">
                  <div className="text-3xl mb-1">‚úÖ</div>
                  <div className="text-lg font-bold text-green-900">–ú–∞—à–∏–Ω–∞ —Å–≤–æ–±–æ–¥–Ω–∞</div>
                </div>
              ) : (
                <div className="bg-red-50 border-2 border-red-500 rounded-lg p-3 text-center">
                  <div className="text-3xl mb-1">üî¥</div>
                  <div className="text-lg font-bold text-red-900">–ú–∞—à–∏–Ω–∞ –∑–∞–Ω—è—Ç–∞</div>
                  {machineState.currentQueueItemId && (() => {
                    const currentItem = queue.find(item => item.id === machineState.currentQueueItemId);
                    if (currentItem) {
                      return (
                        <div className="text-sm text-red-700 mt-1 font-bold">
                          üßë –°—Ç–∏—Ä–∞–µ—Ç: {currentItem.userName}
                        </div>
                      );
                    }
                    return null;
                  })()}
                  {machineState.expectedFinishAt && (
                    <div className="text-sm text-red-700 mt-1">
                      –ó–∞–∫–æ–Ω—á–∏—Ç: {new Date(machineState.expectedFinishAt).toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' })}
                    </div>
                  )}
                </div>
              )}
            </div>
            
            {/* –õ–æ–≥–∏–∫–∞ –≤—Ö–æ–¥–∞ */}
            {!user && !isAdmin ? (
              <>
                <StudentAuth />
                <AdminLogin />
              </>
            ) : (
              <>
                {/* –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã */}
                {isAdmin && <AdminPanel />}
                
                {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ò–õ–ò –∞–¥–º–∏–Ω */}
                {(user || isAdmin) && (
        <>
        {!isAdmin && <UserForm />} {/* UserForm —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
        <QueueList />
      </>
    )}
  </>
)}
          </div>
        )}
        
        {/* –ò—Å—Ç–æ—Ä–∏—è */}
        {activeTab === 'history' && (
          <div className="space-y-4">
            <HistoryList />
          </div>
        )}

        {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        {activeTab === 'settings' && user && (
          <div className="space-y-4">
            {!isAdmin && <TelegramSetup />}
            
            <div className="bg-white p-4 rounded-lg shadow-sm">
              <h3 className="font-bold text-lg text-gray-800 mb-3">–ê–∫–∫–∞—É–Ω—Ç</h3>
              <button
                onClick={() => {
                  logoutStudent();
                  setActiveTab('main');
                  setIsNewUser(false);
                  localStorage.removeItem('needsTelegramSetup');
                }}
                className="w-full bg-red-500 text-white font-semibold py-3 px-4 rounded-lg hover:bg-red-600 shadow-sm"
              >
                üö™ –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
              </button>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}